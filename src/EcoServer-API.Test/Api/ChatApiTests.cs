/* 
 * Eco Game API
 *
 * First API draft for Eco. Heavy work in progress and subject to changes.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using EcoServer-API.Client;
using EcoServer-API.Api;

namespace EcoServer-API.Test
{
    /// <summary>
    ///  Class for testing ChatApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ChatApiTests
    {
        private ChatApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ChatApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ChatApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ChatApi
            //Assert.IsInstanceOfType(typeof(ChatApi), instance, "instance is a ChatApi");
        }

        
        /// <summary>
        /// Test ChatGetChat
        /// </summary>
        [Test]
        public void ChatGetChatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //double? startDay = null;
            //double? endDay = null;
            //instance.ChatGetChat(authtoken, authtokentype, startDay, endDay);
            
        }
        
        /// <summary>
        /// Test ChatGetChatByTag
        /// </summary>
        [Test]
        public void ChatGetChatByTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //string tag = null;
            //double? startDay = null;
            //double? endDay = null;
            //instance.ChatGetChatByTag(authtoken, authtokentype, tag, startDay, endDay);
            
        }
        
        /// <summary>
        /// Test ChatGetChatMessagesSentBy
        /// </summary>
        [Test]
        public void ChatGetChatMessagesSentByTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string authtoken = null;
            //string authtokentype = null;
            //double? startDay = null;
            //double? endDay = null;
            //instance.ChatGetChatMessagesSentBy(username, authtoken, authtokentype, startDay, endDay);
            
        }
        
        /// <summary>
        /// Test ChatGetNext
        /// </summary>
        [Test]
        public void ChatGetNextTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //int? numNextMessages = null;
            //EcoWebServerDataTransferObjectsChatMessageDTO body = null;
            //instance.ChatGetNext(authtoken, authtokentype, numNextMessages, body);
            
        }
        
        /// <summary>
        /// Test ChatGetPrevious
        /// </summary>
        [Test]
        public void ChatGetPreviousTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //int? numPreviousMessages = null;
            //EcoWebServerDataTransferObjectsChatMessageDTO body = null;
            //instance.ChatGetPrevious(authtoken, authtokentype, numPreviousMessages, body);
            
        }
        
        /// <summary>
        /// Test ChatSendChat
        /// </summary>
        [Test]
        public void ChatSendChatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //string username = null;
            //string message = null;
            //instance.ChatSendChat(authtoken, authtokentype, username, message);
            
        }
        
    }

}
