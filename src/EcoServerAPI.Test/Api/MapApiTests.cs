/* 
 * Eco Game API
 *
 * First API draft for Eco. Heavy work in progress and subject to changes.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using EcoServerAPI.Client;
using EcoServerAPI.Api;
using EcoServerAPI.Model;

namespace EcoServerAPI.Test
{
    /// <summary>
    ///  Class for testing MapApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MapApiTests
    {
        private MapApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MapApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MapApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MapApi
            //Assert.IsInstanceOfType(typeof(MapApi), instance, "instance is a MapApi");
        }

        
        /// <summary>
        /// Test MapEntities
        /// </summary>
        [Test]
        public void MapEntitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //List<string> entityTypes = null;
            //List<string> states = null;
            //var response = instance.MapEntities(authtoken, authtokentype, entityTypes, states);
            //Assert.IsInstanceOf<List<EcoWebServerDataTransferObjectsEntityDTO>> (response, "response is List<EcoWebServerDataTransferObjectsEntityDTO>");
        }
        
        /// <summary>
        /// Test MapEntityTypes
        /// </summary>
        [Test]
        public void MapEntityTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //var response = instance.MapEntityTypes(authtoken, authtokentype);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test MapGetDimension
        /// </summary>
        [Test]
        public void MapGetDimensionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //var response = instance.MapGetDimension(authtoken, authtokentype);
            //Assert.IsInstanceOf<EcoSharedMathVector3i> (response, "response is EcoSharedMathVector3i");
        }
        
        /// <summary>
        /// Test MapGetProperty
        /// </summary>
        [Test]
        public void MapGetPropertyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //instance.MapGetProperty(authtoken, authtokentype);
            
        }
        
        /// <summary>
        /// Test MapLayerList
        /// </summary>
        [Test]
        public void MapLayerListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //var response = instance.MapLayerList(authtoken, authtokentype);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test MapMakeMapJSON
        /// </summary>
        [Test]
        public void MapMakeMapJSONTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //instance.MapMakeMapJSON(authtoken, authtokentype);
            
        }
        
        /// <summary>
        /// Test MapMapStats
        /// </summary>
        [Test]
        public void MapMapStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //var response = instance.MapMapStats(authtoken, authtokentype);
            //Assert.IsInstanceOf<EcoWebServerDataTransferObjectsMapStats> (response, "response is EcoWebServerDataTransferObjectsMapStats");
        }
        
        /// <summary>
        /// Test MapWaterLevel
        /// </summary>
        [Test]
        public void MapWaterLevelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authtoken = null;
            //string authtokentype = null;
            //var response = instance.MapWaterLevel(authtoken, authtokentype);
            //Assert.IsInstanceOf<float?> (response, "response is float?");
        }
        
    }

}
